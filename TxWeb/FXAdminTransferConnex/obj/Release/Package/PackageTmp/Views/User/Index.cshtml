@using FXAdminTransferConnex.Entities;
@using FXAdminTransferConnex.Common
@using FXAdminTransferConnexApp
@using Kendo.Mvc.UI

<div class="content">
    <legend>Users</legend>
    <div class="panel panel-default">
        <div class="panel-body pb-0">
            <div class="row">
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <input id="txtsearch" type="text" placeholder="Search" class="k-textbox" />
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <button id="search" type="button" class="k-button btn-orange">Search</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* GRID HERE *@

    <fieldset>
        <legend></legend>
        <div class="panel panel-default">
            <div class="panel-body">

                @(Html.Kendo().Grid<UserModel>()
                                  .Name("gridUser")
                                  .Columns(columns =>
                                  {
                                      columns.Bound(m => m)
                                          .ClientTemplate("<input type=\"checkbox\" name=\"IsActive_#=UserId#\" onchange='StatusChanged(this)' id=\"IsActive_#=UserId#\" class=\"k-checkbox chkStatus\" value=#= (IsActive == 1)? 'Active' : 'Inactive'#  #= (IsActive == 1)? checked='checked' : ''# ><label class=\"control-label k-checkbox-label\" for=\"IsActive_#=UserId#\"></label> ")
                                          .HtmlAttributes(Common.CenterColumnStyle)
                                          .HeaderHtmlAttributes(Common.CenterColumnStyle)
                                          .Title("Active").Sortable(false).Width(30);
                                      columns.Bound(m => m.FirstName).Width(150);
                                      columns.Bound(m => m.LastName).Width(150);
                                      columns.Bound(m => m.EmailAddress);
                                      columns.ForeignKey(m => m.UserTypeId, (System.Collections.IEnumerable)ViewData["UserList"], "Value", "Text")
                                          .Title("Type").Width(150);
                                      columns.Command(command =>
                                      {
                                          if (WebHelper.CanEdit())
                                          {
                                              command.Custom("Edit").Text("<span class='k-icon k-edit-white'></span>").Click("onInsert").HtmlAttributes(new { @style = "margin:2px;background: #0833b7;color:white;" });
                                          }
                                          if (WebHelper.CanDelete())
                                          {
                                              command.Custom("Delete").Text("<span class='k-icon k-delete-white'></span>").Click("onDelete").HtmlAttributes(new { @style = "margin:2px;background:#ff1962;color:white;" });

                                              //command.Destroy().Text(" ").HtmlAttributes(new { @style = "margin:2px" });
                                          }
                                      })
                                          .HeaderHtmlAttributes(Common.CenterColumnStyle)
                                          .HtmlAttributes(Common.CenterColumnStyle)
                                          .Title("Action")
                                          .Width(150);
                                  })
                                  .ToolBar(toolbar =>
                                  {
                                      if (WebHelper.CanAdd())
                                      {
                                          toolbar.Custom().Text("Add User").Url(Url.Action("ManageUser", "User")).HtmlAttributes(new { @class = "k-button btn-orange" });
                                      }

                                  })
                                  .Editable(e => e.Mode(GridEditMode.PopUp))
                                  .Pageable(x =>
                                  {
                                      x.Refresh(true);
                                      x.PageSizes(new int[] { 10, 20, 50, 100 });
                                  })
                                  .Selectable(selectable => selectable
                                  .Mode(GridSelectionMode.Single))
                                  .Navigatable()
                                  .Sortable(sortable => sortable.AllowUnsort(false))
                                  .NoRecords()
                                  .DataSource(dataSource => dataSource
                                      .Ajax()
                                      .ServerOperation(false)
                                      .PageSize(ConfigItems.GridPageSize)
                                      .Model(model =>
                                      {
                                          model.Id(d => d.UserId);
                                      })
                                    .Destroy(delete => delete.Action("DeleteUser", "User"))
                                    .Read(read => read.Action("GetUserList", "User"))
                                    .Events(events => events.RequestEnd("onRequestEnd"))
                                  ))
            </div>
        </div>
    </fieldset>
</div>
<script>
    $(document).ready(function () {
        var havePermission ='@WebHelper.CanView()';
        if (havePermission.toLowerCase()=="false") {
            var urllink = '@Url.Action("PermissionDenied", "Common")';
            window.location.href = urllink;
        }
        kendoGridScroll();
    });

    $('.k-pager-refresh').click(function () {
        $('#txtsearch').val('');
    });

    function StatusChanged(e) {

        bootbox.confirm("Are you sure want to change status?", function (result) {
            if (result) {
                var id = e.id;
                var userId = id.toString().split('_')[1];
                var status;
                if (e.value === "Active") {
                    status = false;
                }
                else {
                    status = true;
                }
                $.ajax({
                    type: "POST",
                    url: encodeURI('@Url.Action("ChangeStatus", "User")'),
                    data: { UserId: userId, Status: status },
                    cache: false,
                    async: false,
                    //dataType: 'json',
                    error: function (jqXHR, exception) {
                    },
                    success: function (data) {
                        if (data) {
                            DisplayResponseMessageForAjax(data);
                            $('#gridUser').data('kendoGrid').dataSource.read();
                        }
                    }

                });
            }
            else {
                if ($('#' + e.id).val() == "Active") {
                    $('#' + e.id).prop('checked', true);
                }
                else {
                    $('#' + e.id).attr('checked', false);
                }
            }
        });
    }

    $("#search").click(function () {
        //if ($('#txtsearch').val() !== "") {
        $('#gridUser').data('kendoGrid').dataSource.read({ Search: $('#txtsearch').val().trim() });
        $('#gridUser').data().kendoGrid.dataSource.page(1);
        //}
    });

    $('#txtsearch').keypress(function (e) {
        var key = e.which;
        if (key == 13)  // the enter key code
        {
            if ($('#txtsearch').val() !== "") {
                $('#gridUser').data('kendoGrid').dataSource.read({ Search: $('#txtsearch').val().trim() });
                $('#gridUser').data().kendoGrid.dataSource.page(1);
            }
        }
    });

    //Shows the notifications
    function onRequestEnd(para) {
        if (para.type == 'update' || para.type == 'create' || para.type == 'destroy') {
            $('#gridUser').data('kendoGrid').dataSource.read();
        }
        DisplayResponseMessage(para);
    }

    function onInsert(e) {
        var userId = 0;

        if (e != 0) {
            e.preventDefault();
            var tr = $(e.target).closest("tr");
            var data = this.dataItem(tr);

            if (data != null) {
                userId = data.UserId;
            }
        }
        var urllink = '@Url.Action("ManageUser", "User")';
        window.location.href = urllink + "?id=" + userId;
    }
    function onDelete(e) {
        var current = this;
        bootbox.confirm("Are you sure you want to delete this record?",
            function(result) {
                if (result) {
                    var userId = 0;

                    if (e != 0) {
                        e.preventDefault();
                        var tr = $(e.target).closest("tr");
                        var data = current.dataItem(tr);

                        if (data != null) {
                            userId = data.UserId;

                            $.ajax({
                                type: "POST",
                                url: encodeURI('@Url.Action("DeleteUser", "User")'),
                                data: { userId: userId },
                                cache: false,
                                async: false,
                                error: function (jqXHR, exception) {
                                },
                                success: function (data) {
                                    if (data) {
                                        DisplayResponseMessageForAjax(data);
                                        $('#gridUser').data('kendoGrid').dataSource.read();
                                    }
                                }

                            });
                        }
                    }

                    
                }
            });
       
    }
</script>