@using Kendo.Mvc.UI;
@model FXAdminTransferConnex.Entities.StagingDealModel

@{
    ViewBag.Title = "Manage Staging Deal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("ManageStagingDeal", "StagingDeal", FormMethod.Post, new { @id = "StagingDealForm" }))
{
    @Html.HiddenFor(m => m.StagingDealId)
    @Html.HiddenFor(m => m.DealNo)
    <div class="content">
        <legend>Staging Deal Detail</legend>
        <fieldset>
            <legend></legend>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <h4><b>Staging Deal No. : @Model.DealNo</b></h4>
                            </div>
                            <div class="col-md-6">
                                <a href="@Url.Action("Index", "StagingDeal")" class="btn btn-orange mt-5 mr-10 pull-right">Back</a>
                                @if (!Model.IsDiscard)
                                {
                                    if (Model.ClientId == 0)
                                    {
                                        <a href="@Url.Action("ReloadStagingDeal", "StagingDeal", new { StagingDealId= Model.StagingDealId })" class="btn btn-orange mt-5 mr-10 pull-right">Reload</a>
                                    }
                                    <button id="btnProceedDeal" type="button" class="btn btn-orange mt-5 mr-10 pull-right">Proceed Deal</button>                                    
                                }
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Contact/Account Name:</label>
                                    @Html.TextBoxFor(m => m.ContactName, new { @placeholder = "Contact/Account Name", @class = "form-control", @tabindex = "1" })
                                    @Html.ValidationMessageFor(m => m.ContactName)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Account Number:</label>
                                    @Html.TextBoxFor(m => m.AccountNo, new { @placeholder = "Account Number", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.AccountNo)
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Company Name:</label>
                                    @Html.TextBoxFor(m => m.CompanyName, new { @placeholder = "Company Name", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.CompanyName)
                                </div>
                            </div>
                            <div class="col-md-6">
                            </div>
                        </div>


                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Trade Date:</label>
                                    @(Html.Kendo()
                                        .DatePickerFor(m => m.TradeDate)
                                        .Format(FXAdminTransferConnex.Common.ConfigItems.DateFormate)
                                        .HtmlAttributes(new { @class = "dropdown", style = "width: 100%" })
                                    )
                                    @Html.ValidationMessageFor(m => m.TradeDate)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Value Date:</label>
                                    @(Html.Kendo()
                                        .DatePickerFor(m => m.ValueDate)
                                        .Format(FXAdminTransferConnex.Common.ConfigItems.DateFormate)
                                        .HtmlAttributes(new { @class = "dropdown", style = "width: 100%" })
                                    )
                                    @Html.ValidationMessageFor(m => m.ValueDate)
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Trade Type:</label>
                                    @(Html.Kendo().DropDownListFor(d => d.TradeType)
                                        .HtmlAttributes(new { style = "width:100%;" })
                                        .OptionLabel("Select Trade Type")
                                        .DataTextField("Text")
                                        .DataValueField("Text")
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetTradeType", "Common");
                                            });
                                        })
                                    )
                                    @Html.ValidationMessageFor(m => m.TradeType)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Transaction Status:</label>
                                    @(Html.Kendo().DropDownListFor(d => d.TStatus)
                                        .HtmlAttributes(new { style = "width:100%;" })
                                        .OptionLabel("Select Transaction Status")
                                        .DataTextField("Text")
                                        .DataValueField("Text")
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetTransactionStatus", "Common");
                                            });
                                        })
                                    )
                                    @Html.ValidationMessageFor(m => m.TStatus)
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <h4>Client Sold Details</h4>
                        </div>


                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Sold CCY:</label>
                                    @Html.TextBoxFor(m => m.ClientSoldCCY, new { @placeholder = "Sold CCY", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ClientSoldCCY)
                                </div>
                            </div>
                            <div class="col-md-6">
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Sold Amount:</label>
                                    @Html.TextBoxFor(m => m.ClientSoldAmt, new { @placeholder = "Sold Amount", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ClientSoldAmt)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Sold Amount(GBP):</label>
                                    @Html.TextBoxFor(m => m.ClientSoldGBP, new { @placeholder = "Sold Amount(GBP)", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ClientSoldGBP)
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <h4>Client Bought Details</h4>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Bought CCY:</label>
                                    @Html.TextBoxFor(m => m.ClientBoughtCCY, new { @placeholder = "Bought CCY", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ClientBoughtCCY)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Bought Amount:</label>
                                    @Html.TextBoxFor(m => m.ClientBoughtAmt, new { @placeholder = "Bought Amount", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ClientBoughtAmt)
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <h4>Profit Summary</h4>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Gross Comms GBP :</label>
                                    @Html.TextBoxFor(m => m.GrossCommGBP, new { @placeholder = "Gross Comms GBP", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.GrossCommGBP)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">WL Total Comm(GBP):</label>
                                    @Html.TextBoxFor(m => m.WLTotalCommGBP, new { @placeholder = "WL Total Comm(GBP)", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.WLTotalCommGBP)
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </fieldset>
    </div>
}


<script>
    $(document).ready(function () {
        var validator = $("#StagingDealForm").kendoValidator().data("kendoValidator");

        $("#btnProceedDeal").click(function (event) {
            var clientId = @Model.ClientId;
            if(clientId == 0)
            {
                bootbox.alert("Client Not Found.")
            }
            else
            {
                bootbox.confirm("Are your sure you want Proceed Deal?", function (result) {
                    if (result) {
                        window.location.href = '@Url.Action("ProceedStagingDeal", "StagingDeal", new { StagingDealId = Model.StagingDealId })';
                    }
                });
            }
        });
    });



</script>