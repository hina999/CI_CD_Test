name: 🚨 Code Formatting & Naming Convention Check (.NET Framework 4.5)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, dev]

jobs:
  code-check:
    name: ✨ StyleCop & Naming Convention Review
    runs-on: windows-2019
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.cs
            **/*.csproj
            **/*.sln

      - name: 🧰 Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: 🧩 Restore NuGet Packages
        run: nuget restore TxWeb/FXAdminTransferConnex.sln

      - name: 🔎 Run StyleCop Analyzers
        id: stylecop
        shell: pwsh
        continue-on-error: true
        run: |
          msbuild TxWeb/FXAdminTransferConnex.sln /p:RunCodeAnalysis=true /p:Configuration=Release | Tee-Object -FilePath stylecop-output.txt
          $violations = Get-Content stylecop-output.txt | Select-String -Pattern 'SA\d{4}|warning' | Select-Object -First 10
          $violations | Set-Content -Path stylecop-summary.txt

      - name: 🚨 Manual Naming Convention Check
        id: naming
        shell: pwsh
        continue-on-error: true
        run: |
          $ChangedFilesRaw = "${{ steps.changed-files.outputs.all_changed_files }}"
          $ChangedFiles = $ChangedFilesRaw -split "`n" | Where-Object { $_ -like "*.cs" }
          $errors = @()
          foreach ($file in $ChangedFiles) {
            if (Test-Path $file) {
              $content = Get-Content $file
              if ($content -match 'class\s+\w+' -and -not ($content -match 'class\s+[A-Z][a-zA-Z0-9]*')) {
                $errors += "::error file=$file::Class name should be PascalCase."
              }
              if ($content -match '\s+[A-Z]{2,}\w*\s*=') {
                $errors += "::error file=$file::Variable name should be camelCase."
              }
            }
          }
          $errors | Set-Content -Path naming-summary.txt
          "error_count=$($errors.Count)" | Out-File -FilePath "$env:GITHUB_OUTPUT" -Append
          if ($errors.Count -gt 0) { exit 1 }

      - name: 💬 Post or Update PR Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const stylecop = fs.existsSync('stylecop-summary.txt') ? fs.readFileSync('stylecop-summary.txt', 'utf8') : 'No issues found.';
            const naming = fs.existsSync('naming-summary.txt') ? fs.readFileSync('naming-summary.txt', 'utf8') : 'No issues found.';

            const body = [
              '## 🛠 Code Style & Naming Convention Report',
              '',
              '### StyleCop (Top 10 Warnings):',
              '```',
              stylecop.trim(),
              '```',
              '',
              '### Naming Convention Issues:',
              '```',
              naming.trim(),
              '```',
              '',
              '---',
              '',
              '🔍 *Only the top 10 style violations are shown.*',
              '',
              '💡 For full analysis, run StyleCop locally or integrate ReSharper CLI.',
              '',
              '🚧 Merge is blocked until these issues are resolved.'
            ].join('\n');

            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const existing = comments.find(c => c.body && c.body.includes('## 🛠 Code Style & Naming Convention Report'));

            if (existing) {
              await github.rest.issues.updateComment({
                comment_id: existing.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body,
              });
            }

      - name: 🚫 Block Merge if Issues Found
        if: steps.naming.outcome == 'failure' || steps.stylecop.outcome == 'failure'
        run: |
          echo "::error::Style or naming violations detected. Please fix before merging."
          exit 1
